@model IEnumerable<C_R_M.Models.AsigPermiso>

@using (Html.BeginForm("Update", "Rols"))
{
    @Html.AntiForgeryToken()

    @Html.Hidden("id", (int)ViewData["id"])
    <div class="form-horizontal">
        <h4>Permisos</h4>
        <hr />
        @{
            HashSet<String> modulos = new HashSet<string>((from per in Model orderby per.Modulo select per.Modulo).ToArray());
            foreach (var modulo in modulos)
            {
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <dl class="dl-horizontal" style="margin-bottom: 0">
                            <dt style="text-align: left;" class="titulo">
                                @modulo
                            </dt>

                            <dd class="text-right">
                                <input htmlattributes="{ class = form-control, style = padding-right: 4px; }" type="checkbox" value="false" onchange="seleccion('@modulo',this.checked)">
                            </dd>
                        </dl>
                    </div>
                    <div class="panel-body">
                        @foreach (var item in Model.Where(p => p.Modulo.Equals(modulo)))
                        {
                            if (item.Tipo.Equals("Metodo"))
                            {
                                @Html.LabelFor(modelItem => item.Accion, new { @class = "control-label", style = "padding-right: 4px; padding-left: 4px;" })
                                @Html.CheckBoxFor(modelItem => item.Autorizado, new { @class = modulo, style = "padding-right: 4px;" });
                            }
                            else
                            {
                                @Html.Label("Crear", new { @class = "control-label", style = "padding-right: 4px; padding-left: 4px;" })
                                @Html.CheckBoxFor(modelItem => item.Crear, new { @class = modulo, style = "padding-right: 4px;" });
                                @Html.Label("Editar", new { @class = "control-label", style = "padding-right: 4px; padding-left: 4px;" })
                                @Html.CheckBoxFor(modelItem => item.Editar, new { @class = modulo, style = "padding-right: 4px;" });
                                @Html.Label("Mostrar", new { @class = "control-label ", style = "padding-right: 4px; padding-left: 4px;" })
                                @Html.CheckBoxFor(modelItem => item.Mostrar, new { @class = modulo, style = "padding-right: 4px;" });
                                @Html.Label("Eliminar", new { @class = "control-label ", style = "padding-right: 4px; padding-left: 4px;" })
                                @Html.CheckBoxFor(modelItem => item.Eliminar, new { @class = modulo, style = "padding-right: 4px;" });
                            }
                        }
                    </div>
                </div>
            }
            <div class="form-group">
                <div class="text-right" style="padding-right: 70px;">
                    <input type="submit" value="Save" class="btn btn-success" />
                </div>
            </div>
            <script>
                var titulos = document.getElementsByClassName("titulo");
                var modulos = [];
                for (var i = 0; i < titulos.length; i++) {
                    modulos[i] = titulos[i].innerText;
                }
                function seleccion(name, estado) {
                    var listado = document.getElementsByClassName(name);
                    for (var i = 0; i < listado.length; i++)
                        listado[i].checked = estado;
                }
            </script>
        }
    </div>
}
